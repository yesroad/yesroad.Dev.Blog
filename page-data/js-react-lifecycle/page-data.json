{"componentChunkName":"component---src-templates-post-tsx","path":"/js-react-lifecycle/","result":{"data":{"markdownRemark":{"html":"<p><img src=\"https://velopert.com/wp-content/uploads/2016/03/Screenshot-from-2016-12-10-00-21-26-1.png\" alt=\"출처 : https://velopert.com/1130\"></p>\n<h2 id=\"--mount\" style=\"position:relative;\"><a href=\"#--mount\" aria-label=\"  mount permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>- Mount</h2>\n<p>컴포넌트가 실행 될 때, 'Mount 된다' 라고 표현.</p>\n<p>컴포넌트가 시작되면 제일 초기의 작업은</p>\n<ol>\n<li>context, defaultProps, state 저장</li>\n<li>componentWillMount 메소드 호출</li>\n<li>render, 컴포넌트를 DOM에 그린다.</li>\n<li>componentDidMount 호출</li>\n</ol>\n<hr>\n<h2 id=\"--기본적인-컴포넌트-생성-과정\" style=\"position:relative;\"><a href=\"#--%EA%B8%B0%EB%B3%B8%EC%A0%81%EC%9D%B8-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8-%EC%83%9D%EC%84%B1-%EA%B3%BC%EC%A0%95\" aria-label=\"  기본적인 컴포넌트 생성 과정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>- 기본적인 컴포넌트 생성 과정</h2>\n<h3 id=\"constructor\" style=\"position:relative;\"><a href=\"#constructor\" aria-label=\"constructor permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>constructor</h3>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>컴포넌트가 처음 만들어 질 때 <strong>가장 먼저</strong> 실행되는 메소드</p>\n<h3 id=\"componentwillmount\" style=\"position:relative;\"><a href=\"#componentwillmount\" aria-label=\"componentwillmount permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>componentWillMount</h3>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token function\">componentWillMount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>컴포넌트가 DOM 위에 만들어지기 전에 실행된다,</p>\n<ul>\n<li>\n<p>componentWillMount 중 주의할 점</p>\n<ul>\n<li>현재 Mount 진행 중이므로(DidMount 전이다), props나 state를 변경해서는 안된다.</li>\n<li>또한 render 단계에 진입하지 않았으므로 DOM에 접근 할 수 없다.</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"componentdidmount\" style=\"position:relative;\"><a href=\"#componentdidmount\" aria-label=\"componentdidmount permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>componentDidMount</h3>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token function\">componentDidMount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>컴포넌트가 만들어지고 난 후 render를 거치고 실행되는 메소드.</p>\n<p>여기서 javascript framework 연동, setTimeout, setInterval 및 AJAX 처리를 한다.</p>\n<ul>\n<li>\n<p>componentDidMount 에서 주의할 점</p>\n<ul>\n<li>render가 되었으므로 DOM에 접근 할 수 있지만,\nstate를 바꾸면 안된다. setState메소드를 사용하면 render 메소드가 다시 실행되기 때문이다.\n방금 render를 마친 단계인데, 다시금 render가 실행되면 사용자에게 표시될때 깜박임 등을 유발 할 수 있게 된다.</li>\n</ul>\n</li>\n</ul>\n<hr>\n<h2 id=\"--props-update-에-따른-cycle\" style=\"position:relative;\"><a href=\"#--props-update-%EC%97%90-%EB%94%B0%EB%A5%B8-cycle\" aria-label=\"  props update 에 따른 cycle permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>- Props Update 에 따른 cycle</h2>\n<p>props가 업데이트 될 때의 사이클,</p>\n<p>업데이트 되기 전, 업데이트를 감지 우선 <strong>componentWillRecieveProps</strong> 메소드 호출.</p>\n<p>다음으로 <strong>shouldComponentUpdate, componentWillUpdate</strong>가 차례로 호출.</p>\n<p>업데이트(render)가 완료되면 componentDidUpdate가 실행된다.</p>\n<p>여기서 componentDidUpdate는 이미 업데이트 된 상태이다, 따라서 바뀌지 이전의 props에 대한 정보를 가지고 있다.</p>\n<p>메소드들의 첫번째 인자로 props에 대한 정보를 가지고 있다.</p>\n<ol>\n<li>componentWillRecieveProps</li>\n<li>shouldComponentUpdate</li>\n<li>componentWillUpdate</li>\n<li>render</li>\n<li>componentDidUpdate</li>\n</ol>\n<h3 id=\"componentwillrecieveprops\" style=\"position:relative;\"><a href=\"#componentwillrecieveprops\" aria-label=\"componentwillrecieveprops permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>componentWillRecieveProps</h3>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token function\">componentWillRecieveProps</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">nextProps</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  \n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>컴포넌트가 props를 새로 받았을 때 실행.</p>\n<p>prop에 따라 state 를 업데이트 해야 할 때 사용하면 유용하다.</p>\n<ul>\n<li>\n<p>componentWillRecieveProps 단계에서 주의 할 점</p>\n<ul>\n<li>setState를 할 때 추가적으로 렌더링 하지 않는다</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"shouldcomponentupdate\" style=\"position:relative;\"><a href=\"#shouldcomponentupdate\" aria-label=\"shouldcomponentupdate permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>shouldComponentUpdate</h3>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token function\">shouldComponentUpdate</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">nextProps<span class=\"token punctuation\">,</span> nextState</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> foo <span class=\"token operator\">=</span> nextProps <span class=\"token operator\">!==</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> foo<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>prop 또는 state가 변경되었을때, 다시 render를 할지 결정하는 메소드.</p>\n<p>return 값 boolean으로 결정된다.</p>\n<h3 id=\"componentwillupdate\" style=\"position:relative;\"><a href=\"#componentwillupdate\" aria-label=\"componentwillupdate permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>componentWillUpdate</h3>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token function\">componentWillUpdate</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">nextProps<span class=\"token punctuation\">,</span> nextState</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    \n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>컴포넌트가 업데이트 되기 전에 실행.</p>\n<ul>\n<li>\n<p>주의사항</p>\n<ul>\n<li>setState 사용 시 무한 루프 발생</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"componentdidupdate\" style=\"position:relative;\"><a href=\"#componentdidupdate\" aria-label=\"componentdidupdate permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>componentDidUpdate</h3>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token function\">componentDidUpdate</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">prevProps<span class=\"token punctuation\">,</span> prevState</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    \n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>render를 마친 후 실행된다.</p>\n<p>변경되고 난 후 이므로 변경 전의 prop, state를 가지고 있다.</p>\n<hr>\n<h2 id=\"--state-update-에-따른-cycle\" style=\"position:relative;\"><a href=\"#--state-update-%EC%97%90-%EB%94%B0%EB%A5%B8-cycle\" aria-label=\"  state update 에 따른 cycle permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>- State Update 에 따른 cycle</h2>\n<p>setState를 통해서 state가 업데이트 될 때의 과정.</p>\n<p>props update와 과정은 동일하나 componentWillRecieveProps 메소드는 호출되지 않는다.</p>\n<p>메소드들의 두번째 인자로 state에 대한 정보를 가지고 있다.</p>\n<ol>\n<li>shouldComponentUpdate</li>\n<li>componentWillUpdate</li>\n<li>render</li>\n<li>componentDidUpdate</li>\n</ol>\n<hr>\n<h2 id=\"--unmount\" style=\"position:relative;\"><a href=\"#--unmount\" aria-label=\"  unmount permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>- Unmount</h2>\n<p>Unmount, 컴포넌트가 제거되는 것.</p>\n<ol>\n<li>componentWillUnmount</li>\n</ol>\n<h3 id=\"componentwillunmount\" style=\"position:relative;\"><a href=\"#componentwillunmount\" aria-label=\"componentwillunmount permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>componentWillUnmount</h3>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token function\">componentWillUnmount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  \n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>컴포넌트가 DOM 에서 사라진 후 실행되는 메소드,</p>\n<p>연결해두었던 이벤트 리스너를 제거하는 등의 수행을 하게 된다.</p>\n<hr>\n<h2 id=\"references\" style=\"position:relative;\"><a href=\"#references\" aria-label=\"references permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>References</h2>\n<ul>\n<li><a href=\"https://velopert.com/1130\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://velopert.com/1130</a></li>\n<li><a href=\"https://www.zerocho.com/category/React/post/579b5ec26958781500ed9955\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://www.zerocho.com/category/React/post/579b5ec26958781500ed9955</a></li>\n</ul>","excerpt":"출처 : https://velopert.com/1130 - Mount 컴포넌트가 실행 될 때, 'Mount 된다' 라고 표현. 컴포넌트가 시작되면 제일 초기의 작업은 context, defaultProps, state 저장 componentWillM…","tableOfContents":"<ul>\n<li><a href=\"/js-react-lifecycle/#--mount\">- Mount</a></li>\n<li>\n<p><a href=\"/js-react-lifecycle/#--%EA%B8%B0%EB%B3%B8%EC%A0%81%EC%9D%B8-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8-%EC%83%9D%EC%84%B1-%EA%B3%BC%EC%A0%95\">- 기본적인 컴포넌트 생성 과정</a></p>\n<ul>\n<li><a href=\"/js-react-lifecycle/#constructor\">constructor</a></li>\n<li><a href=\"/js-react-lifecycle/#componentwillmount\">componentWillMount</a></li>\n<li><a href=\"/js-react-lifecycle/#componentdidmount\">componentDidMount</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"/js-react-lifecycle/#--props-update-%EC%97%90-%EB%94%B0%EB%A5%B8-cycle\">- Props Update 에 따른 cycle</a></p>\n<ul>\n<li><a href=\"/js-react-lifecycle/#componentwillrecieveprops\">componentWillRecieveProps</a></li>\n<li><a href=\"/js-react-lifecycle/#shouldcomponentupdate\">shouldComponentUpdate</a></li>\n<li><a href=\"/js-react-lifecycle/#componentwillupdate\">componentWillUpdate</a></li>\n<li><a href=\"/js-react-lifecycle/#componentdidupdate\">componentDidUpdate</a></li>\n</ul>\n</li>\n<li><a href=\"/js-react-lifecycle/#--state-update-%EC%97%90-%EB%94%B0%EB%A5%B8-cycle\">- State Update 에 따른 cycle</a></li>\n<li>\n<p><a href=\"/js-react-lifecycle/#--unmount\">- Unmount</a></p>\n<ul>\n<li><a href=\"/js-react-lifecycle/#componentwillunmount\">componentWillUnmount</a></li>\n</ul>\n</li>\n<li><a href=\"/js-react-lifecycle/#references\">References</a></li>\n</ul>","fields":{"slug":"/js-react-lifecycle/"},"frontmatter":{"title":"리액트 생명주기 (React LifeCycle)","date":"Jun 20, 2017","tags":["javascript","react"],"keywords":["yesroad.Dev","Eunggil Kim"],"update":"Jan 01, 0001"}}},"pageContext":{"slug":"/js-react-lifecycle/","series":[],"lastmod":"2017-06-20"}},"staticQueryHashes":["2027115977","694178885"]}