{"componentChunkName":"component---src-templates-post-tsx","path":"/angular-setup/","result":{"data":{"markdownRemark":{"html":"<p>Angular 개발을 시작하기 전, 개발에 앞서 개발 환경 구성과 간단한 사용을 먼저 해보자.</p>\n<h2 id=\"typescript\" style=\"position:relative;\"><a href=\"#typescript\" aria-label=\"typescript permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>TypeScript</h2>\n<p>Augular를 본격적으로 하기 전 TypeScript를 설치하기로 하자.</p>\n<p>타입스크립트는 동적 타입 언어인 자바스크립트에 명시적으로 타입 선언이 가능하도록 정적 타입 언어의 장점을 가지게 된 언어이다.  </p>\n<p>Angular(!= AngularJS)는 TypeScript를 베이스로 만들어졌고,<br>\n왜 앵귤러에 타입스크립트인지는 아래 링크의 글을 읽어보면 좋을 것이다.</p>\n<p><a href=\"https://github.com/not-for-me/til/blob/master/angular2/translations/writing_angular2_in_typescript.md\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Angular: Why TypeScript</a></p>\n<h3 id=\"설치\" style=\"position:relative;\"><a href=\"#%EC%84%A4%EC%B9%98\" aria-label=\"설치 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>설치</h3>\n<p>아래 명령어를 사용하여 타입스크립트를 설치하자.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">$ <span class=\"token function\">npm</span> <span class=\"token function\">install</span> -g typescript</code></pre></div>\n<p>글로벌 설치를 선호하지 않는다면 프로젝트내 설치하는 방법도 물론 괜찮다.</p>\n<p>글로버 설치를 했다면 이제 <code class=\"language-text\">tsc test.ts</code>와 같이 명령어로 타입스크립트를 컴파일 할 수 있다.</p>\n<p>만약 프로젝트 내 설치를 했다면 npm script에서 <code class=\"language-text\">&quot;tsc test.ts&quot;</code> 와 같이 스크립트를 추가하거나,\n콘솔 환경에서 <code class=\"language-text\">node_modules/.bin/tsc test.ts</code>와 같이 컴파일이 가능하다.</p>\n<p>아래 기술하는 내용들은 글로벌 설치를 전제로 설명하게 된다.</p>\n<h3 id=\"설정\" style=\"position:relative;\"><a href=\"#%EC%84%A4%EC%A0%95\" aria-label=\"설정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>설정</h3>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">$ tsc --init</code></pre></div>\n<p>이제 프로젝트 내에서 위 명령어로 설정 파일(<code class=\"language-text\">tsconfig.json</code>)을 생성할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"compilerOptions\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"target\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"es5\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"module\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"commonjs\"</span><span class=\"token punctuation\">,</span>\n      ...</code></pre></div>\n<p>어떤 자바스크립트 버전으로 컴파일 할건지 등 설정 파일 안에는 다양한 설정이 가능한데 앵귤러 개발 환경 구성 포스팅이므로 자세한 설정 방법은 생략하겠다.</p>\n<h3 id=\"tslint\" style=\"position:relative;\"><a href=\"#tslint\" aria-label=\"tslint permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>TSLint</h3>\n<p>추가적으로 TSLint를 사용하여 Lint 기능을 사용하는 것도 좋은 방법이다.</p>\n<p>npm으로 설치하거나, Visual Studio Code와 같이 타입스크립트와 호환이 좋은 에디터에서 TSLint를 사용하면 좀 더 판하게 개발 할 수 있다.</p>\n<h3 id=\"간단한-사용\" style=\"position:relative;\"><a href=\"#%EA%B0%84%EB%8B%A8%ED%95%9C-%EC%82%AC%EC%9A%A9\" aria-label=\"간단한 사용 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>간단한 사용</h3>\n<p>자바스크립트를 쓰는 것과의 차이점을 위해서 매우 간단한 예제를 살펴보자.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> n <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> s <span class=\"token operator\">=</span> <span class=\"token string\">'1'</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>n <span class=\"token operator\">==</span> s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>숫자 1과 문자 1을 비교하는 (Strict 비교 아님) 코드가 있고</p>\n<p>만약 이것이 자바스크립트 파일(.js)라고 가정하면 결과는 <strong>true</strong>가 될 것이다.<br>\n그리고 이것이 타입스크립트 파일(.ts)라고 가정하면 아래와 같은 결과를 얻을 수 있다.  </p>\n<p>우선 TSLint가 <code class=\"language-text\">==</code>가 아닌 <code class=\"language-text\">===</code>를 사용하라고 알려줄 것이고,<br>\n그리고 무시하고 컴파일을 진행한다면 아래와 같은 에러가 발생한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">error TS2365: Operator <span class=\"token string\">'=='</span> cannot be applied to types <span class=\"token string\">'1'</span> and <span class=\"token string\">'\"1\"'</span><span class=\"token builtin class-name\">.</span></code></pre></div>\n<p>숫자와 문자열을 비교할 수 없다는 의미이다.</p>\n<p>클래스 등 좀 더 다양한 예제는 아래 링크에서 확인하면 좋다.</p>\n<p><a href=\"http://www.typescriptlang.org/play/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">TypeScript PlayGround</a></p>\n<h2 id=\"angular-cli\" style=\"position:relative;\"><a href=\"#angular-cli\" aria-label=\"angular cli permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Angular CLI</h2>\n<h3 id=\"설치-및-프로젝트-생성\" style=\"position:relative;\"><a href=\"#%EC%84%A4%EC%B9%98-%EB%B0%8F-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EC%83%9D%EC%84%B1\" aria-label=\"설치 및 프로젝트 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>설치 및 프로젝트 생성</h3>\n<p>Angular CLI를 이용해 앵귤러 개발을 시작하는 방법이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">$ <span class=\"token function\">npm</span> <span class=\"token function\">install</span> @angular/cli -g\n$ ng --version</code></pre></div>\n<p><code class=\"language-text\">ng new</code> 명령어를 통해 기본적인 코드와 설정이 되어있는 앵귤러 프로젝트를 생성할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">$ ng new auglar-start-cli\n$ <span class=\"token builtin class-name\">cd</span> angular-start-cli</code></pre></div>\n<h3 id=\"개발-서버\" style=\"position:relative;\"><a href=\"#%EA%B0%9C%EB%B0%9C-%EC%84%9C%EB%B2%84\" aria-label=\"개발 서버 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>개발 서버</h3>\n<p>이제 이렇게 생성된 프로젝트에서 아래 명령어를 통해 로컬 개발 서버를 켤 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">$ ng serve\n** Angular Live Development Server is listening on localhost: <span class=\"token number\">4200</span>, <span class=\"token function\">open</span> your browser on http://localhost:4200/ **</code></pre></div>\n<p>그리고 출력된 주소로 가서 정상적으로 출력이 되고 있는지 확인해보자.</p>\n<h3 id=\"기타-명령어\" style=\"position:relative;\"><a href=\"#%EA%B8%B0%ED%83%80-%EB%AA%85%EB%A0%B9%EC%96%B4\" aria-label=\"기타 명령어 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>기타 명령어</h3>\n<p>생성된 프로젝트에서 컴포넌트 및 서비스를 생성한다면 직접 하는 방법도 있지만,<br>\nAngular CLI의 기본 구조대로 뷰, 컴포넌트(or Service), 스타일, 테스트 파일을 생성해주는 명령어가 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token comment\"># 컴포넌트 생성</span>\n$ ng generate component COMPONENT_NAME\n<span class=\"token comment\"># 서비스 생성</span>\n$ ng g <span class=\"token function\">service</span> SERVICE_NAME\n<span class=\"token comment\"># generate는 g로 줄여 사용할 수 있다.</span></code></pre></div>\n<p>예로 이렇게 생성된 컴포넌트는 아래와 같은 구조를 가진다</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token operator\">-</span> home\n  <span class=\"token operator\">-</span> home<span class=\"token punctuation\">.</span>component<span class=\"token punctuation\">.</span>html <span class=\"token comment\">// View</span>\n  <span class=\"token operator\">-</span> home<span class=\"token punctuation\">.</span>component<span class=\"token punctuation\">.</span>ts <span class=\"token comment\">// Component</span>\n  <span class=\"token operator\">-</span> home<span class=\"token punctuation\">.</span>component<span class=\"token punctuation\">.</span>spec<span class=\"token punctuation\">.</span>ts <span class=\"token comment\">// Test</span>\n  <span class=\"token operator\">-</span> home<span class=\"token punctuation\">.</span>component<span class=\"token punctuation\">.</span>css <span class=\"token comment\">// Style</span></code></pre></div>\n<hr>\n<h2 id=\"references\" style=\"position:relative;\"><a href=\"#references\" aria-label=\"references permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>References</h2>\n<ul>\n<li>서적 '앵귤러 첫걸음' 한빛소프트</li>\n<li><a href=\"https://angular.io/guide/quickstart\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Angular official</a></li>\n</ul>","excerpt":"Angular 개발을 시작하기 전, 개발에 앞서 개발 환경 구성과 간단한 사용을 먼저 해보자. TypeScript Augular를 본격적으로 하기 전 TypeScript를 설치하기로 하자. 타입스크립트는 동적 타입 언어인 자바스크립트에 명시적으로 타…","tableOfContents":"<ul>\n<li>\n<p><a href=\"/angular-setup/#typescript\">TypeScript</a></p>\n<ul>\n<li><a href=\"/angular-setup/#%EC%84%A4%EC%B9%98\">설치</a></li>\n<li><a href=\"/angular-setup/#%EC%84%A4%EC%A0%95\">설정</a></li>\n<li><a href=\"/angular-setup/#tslint\">TSLint</a></li>\n<li><a href=\"/angular-setup/#%EA%B0%84%EB%8B%A8%ED%95%9C-%EC%82%AC%EC%9A%A9\">간단한 사용</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"/angular-setup/#angular-cli\">Angular CLI</a></p>\n<ul>\n<li><a href=\"/angular-setup/#%EC%84%A4%EC%B9%98-%EB%B0%8F-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EC%83%9D%EC%84%B1\">설치 및 프로젝트 생성</a></li>\n<li><a href=\"/angular-setup/#%EA%B0%9C%EB%B0%9C-%EC%84%9C%EB%B2%84\">개발 서버</a></li>\n<li><a href=\"/angular-setup/#%EA%B8%B0%ED%83%80-%EB%AA%85%EB%A0%B9%EC%96%B4\">기타 명령어</a></li>\n</ul>\n</li>\n<li><a href=\"/angular-setup/#references\">References</a></li>\n</ul>","fields":{"slug":"/angular-setup/"},"frontmatter":{"title":"Angular 시작하기 (개발 환경 구성)","date":"May 08, 2018","tags":["angular"],"keywords":["yesroad.Dev","Eunggil Kim"],"update":"Jan 01, 0001"}}},"pageContext":{"slug":"/angular-setup/","series":[],"lastmod":"2018-05-08"}},"staticQueryHashes":["2027115977","694178885"]}