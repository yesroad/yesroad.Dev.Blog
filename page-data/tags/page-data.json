{"componentChunkName":"component---src-pages-tags-tsx","path":"/tags/","result":{"data":{"allMarkdownRemark":{"group":[{"fieldValue":"ES6","totalCount":14,"edges":[{"node":{"excerpt":"이터러블 프로토콜은 ES6에서 도입된 것으로 간단히 말하면 \n이터러블 프로토콜은 순회(반복) 가능한 객체를 나타내는 프로토콜이라 할 수 있다.  반복문,  전개 연산자(Spread Operator), 구조 분해 등과 함께 동작 할 수 있도록 한 프로…","fields":{"slug":"/iterable-protocol/"},"frontmatter":{"date":"Jul 10, 2019","update":"Jan 01, 0001","title":"이터러블 프로토콜, 이터러블/이터레이터","tags":["ES6","javascript"]}}},{"node":{"excerpt":"AJAX(AsynchronousJavaScriptAndXML)는 비동기 자바스크립트를 뜻하는 것으로, 이제는 비동기적 자바스크립트 동작을 하는 기술들을 통들어서도 AJAX라고 부릅니다. 최초로 Microsoft의 Internet Explorer가 탑…","fields":{"slug":"/ajax-xhr-fetch/"},"frontmatter":{"date":"May 14, 2019","update":"Jan 01, 0001","title":"AJAX, XMLHttpRequest와 Fetch 살펴보기","tags":["javascript","ajax","ES6"]}}},{"node":{"excerpt":"Javascript Hoisting에 대해 다시 살펴보던 도중, 예전에 공부할땐 var를 대상으로 공부했으니 깨닫지 못했는데 이번에 let, const를 가지고 해보니... 호이스팅이 되지 않았다. (정확히 말하면 호이스팅이 되지 않는 것은 아니다.…","fields":{"slug":"/js-let-cont-hoisting/"},"frontmatter":{"date":"Apr 26, 2018","update":"Jan 01, 0001","title":"ES6, Hoisting으로 다시 보는 let, const","tags":["ES6","javascript"]}}},{"node":{"excerpt":"Set 중복없이 유일한 값을 저장하기 위한 타입, 이미 존재하는지 체크할때 유용하다 WeakSet 참조를 가지고 있는 객체만 저장이 가능하다. 참조를 가지고 있던 객체가 참조를 잃게 되면 (null 이 되거나…) 가비지컬렉션의 대상이 된다. 객체를 …","fields":{"slug":"/js-es6-set-map/"},"frontmatter":{"date":"Oct 14, 2017","update":"Jan 01, 0001","title":"자바스크립트 ES6 Set, WeakSet / Map, WeakMap","tags":["javascript","ES6"]}}},{"node":{"excerpt":"Proxy : https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Global_Objects/Proxy 권장되는 패턴 reference 모던 자바스크립트(javascript) 개발을 위한 …","fields":{"slug":"/js-es6-proxy/"},"frontmatter":{"date":"Sep 09, 2017","update":"Jan 01, 0001","title":"자바스크립트 ES6 프록시(Proxy)","tags":["javascript","ES6"]}}},{"node":{"excerpt":"ES6에서 출현한 module 기능은 브라우저 호환성이 아직은 완전하지 않다. devOps로 webpack, babel 등을 활용해 사용해 서비스 코드를 만드는 것이 좋다. 기본 사용법 app.js foo.js 심화, 서비스 코드 구현 app.js …","fields":{"slug":"/js-es6-module/"},"frontmatter":{"date":"Sep 01, 2017","update":"Jan 01, 0001","title":"자바스크립트 ES6 module(export&import)","tags":["javascript","ES6"]}}},{"node":{"excerpt":"setPrototypeOf 로 프로토타입 객체를 추가 할 수 있다.  object에 prototype을 추가한다. setPrototypeOf 로 개체간 prototype Chain 만들기 reference 모던 자바스크립트(javascript) 개발…","fields":{"slug":"/js-es6-setprototypeof/"},"frontmatter":{"date":"Sep 01, 2017","update":"Jan 01, 0001","title":"자바스크립트 ES6 Object setPrototypeOf","tags":["javascript","ES6"]}}},{"node":{"excerpt":"아래 코드는 Object create를 사용한 코드이다. 아래 코드는 위의 코드에 Object assign을 사용한 코드이다.  와 같이 계속해서 추가해야하는 수고를 덜어줄 수 있다. Object assign 으로 Immutable 객체 만들기 re…","fields":{"slug":"/js-es6-object-assign/"},"frontmatter":{"date":"Aug 10, 2017","update":"Jan 01, 0001","title":"자바스크립트 ES6 Object.assign","tags":["javascript","ES6"]}}},{"node":{"excerpt":"자바스크립트에도 이번 ES6에서 Class라는 키워드가 생겼다. 아래는 기존 자바스크립트의 코드이다. 아래는 Class를 활용한 코드이다. 위와 같이 클래스로 똑같은 코드를 구현할 수 있다. 하지만 그렇다고 클래스라는 것이 완전히 새로 생긴 것이 아…","fields":{"slug":"/js-es6-class/"},"frontmatter":{"date":"Aug 10, 2017","update":"Jan 01, 0001","title":"자바스크립트 ES6 클래스(Class)","tags":["javascript","ES6"]}}},{"node":{"excerpt":"ES6 에 출현한 새로운 형태의 함수 표현 방법 Arrow Function, this context 위의 코드는 아무런 문제 없이 작동하는 코드이다, runTimeout은 settimeout때문에 이벤트큐에 등록 된뒤 실행되는 것이라 this가 해당…","fields":{"slug":"/js-es6-arrow-function/"},"frontmatter":{"date":"Jul 21, 2017","update":"Jan 01, 0001","title":"자바스크립트 ES6 Arrow Function","tags":["javascript","ES6"]}}},{"node":{"excerpt":"Javascript에서는 배열로 보이지만 정작 배열이 아닌 형태의 것들이 존재한다. 예로 메소드로 전달되는 인자들을 활용하는 arguments 객체같은 경우에도 배열같아보이지만 실제 배열은 아니다.\n따라서, map과 같은 배열을 다루는 메소드를 활용…","fields":{"slug":"/js-es6-from/"},"frontmatter":{"date":"Jun 29, 2017","update":"Jan 01, 0001","title":"자바스크립트 ES6 from","tags":["javascript","ES6"]}}},{"node":{"excerpt":"쉽게 말해 배열을 펼쳐주는 역할이다. '' ''를 떼어낸다고 생각하면 쉽다. 배열을 바꾸지 않고 새로운 값을 복사, 배열을 합치거나 배열을 펼쳐진 상태로 파라메터로 전달 등의 활용이 가능하다.","fields":{"slug":"/js-es6-spread-operator/"},"frontmatter":{"date":"Jun 29, 2017","update":"Jan 01, 0001","title":"자바스크립트 ES6 Spread operator, 펼침 연산자","tags":["javascript","ES6"]}}},{"node":{"excerpt":"String.prototype.startsWith() 문자열이 특정 문자로 시작하는지 확인, 결과를 true, false로 반환. String.prototype.endsWith() 문자열이 특정 문자로 끝나는지 확인, 결과를 true, false로 …","fields":{"slug":"/js-es6-string-methods/"},"frontmatter":{"date":"Jun 29, 2017","update":"Jan 01, 0001","title":"자바스크립트 ES6 String Methods","tags":["javascript","ES6"]}}},{"node":{"excerpt":"ES6 (ES2015) 에서는 새로운 선언 방법이 생겼는데, 그것이 const와 let이다. 기존에 다른 프로그래밍 언어를 사용하고 왔다면 처음 var 를 접할때 당황스러운 점을 느껴본 적이 있을 것이다. var의 관대함 때문이다. 그런 것을 비교하…","fields":{"slug":"/js-es6-const-let/"},"frontmatter":{"date":"Jun 28, 2017","update":"Jan 01, 0001","title":"자바스크립트 ES6 const, let","tags":["javascript","ES6"]}}}]},{"fieldValue":"SEO","totalCount":1,"edges":[{"node":{"excerpt":"처음 웹개발을 배울 때 웹표준을 배웠던 것 사실만 어렴풋이 기억난다. 그 이후 개발을 해오면서는 거의 신경쓰지 않고 개발했던 것 같다. 얼마 전, 이 블로그를 개발하면서 검색 엔진 노출을 위해 웹표준, SEO를 신경써 개발하다보니 다시 한번 살펴봐야…","fields":{"slug":"/meta-tag/"},"frontmatter":{"date":"Nov 15, 2018","update":"Jan 01, 0001","title":"meta 태그를 알아보자 (웹표준과 SEO)","tags":["SEO","html"]}}}]},{"fieldValue":"VSCode","totalCount":4,"edges":[{"node":{"excerpt":"코딩용 폰트는 여러가지가 있다. JAVA 사용자가 많이들 선호하는 Consolas나 요즘 뜨고 있는 fira code라던가 말이다. 많은 폰트를 써봤지만 현재는 Hack 폰트를 사용하고 있다. 본인 생각에 튀는 부분 없이 심플하고 가독성이 좋은 것 …","fields":{"slug":"/dev-font-vsc/"},"frontmatter":{"date":"Feb 13, 2018","update":"Jan 01, 0001","title":"개발자 글꼴 Hack, 그리고 VSCode 글꼴 설정하기","tags":["VSCode"]}}},{"node":{"excerpt":"Visual Studio Code를 쓰기 시작하면서 데스크탑과 랩탑간 설정 동기화가 필요해 방법을 찾다가 확장 플러그인 Settings Sync를 사용하여 하는 방법을 발견했다. 1. 확장 플러그인 'Settings Sync' 설치 https://m…","fields":{"slug":"/vsc-settings-sync/"},"frontmatter":{"date":"Feb 08, 2018","update":"Jan 01, 0001","title":"Visual Studio Code 설정 기기 간 동기화하기","tags":["VSCode"]}}},{"node":{"excerpt":"WebStorm을 쓰다가 Visual Studio Code를 사용하니 React를 쓰기에 불편함이 한두가지가 아니다. 제일 처음 맞은 불편함이 JSX에서 emmet 자동완성이 작동 안되는 것인데, 해결 방법으로 여러 방법이 있었지만 제일 간단한 방법…","fields":{"slug":"/vsc-react-syntax/"},"frontmatter":{"date":"Feb 07, 2018","update":"Jan 01, 0001","title":"VSCode(Visual Studio Code)에서 React JSX 자동완성 기능 활성화하기","tags":["VSCode"]}}},{"node":{"excerpt":"Visual Studio Code 에서 사용중인 확장을 정리해둔 글입니다. Front-End 개발 환경에 맞게 되어있습니다.  는 강력 추천! VSCode 기본 플러그인 및 테마 Korean Language Pack for Visual Studio …","fields":{"slug":"/vsc-plugin-list/"},"frontmatter":{"date":"Jan 19, 2018","update":"Mar 30, 2020","title":"사용중인 VSCode(Visual Studio Code) 확장 플러그인 목록","tags":["VSCode"]}}}]},{"fieldValue":"ajax","totalCount":1,"edges":[{"node":{"excerpt":"AJAX(AsynchronousJavaScriptAndXML)는 비동기 자바스크립트를 뜻하는 것으로, 이제는 비동기적 자바스크립트 동작을 하는 기술들을 통들어서도 AJAX라고 부릅니다. 최초로 Microsoft의 Internet Explorer가 탑…","fields":{"slug":"/ajax-xhr-fetch/"},"frontmatter":{"date":"May 14, 2019","update":"Jan 01, 0001","title":"AJAX, XMLHttpRequest와 Fetch 살펴보기","tags":["javascript","ajax","ES6"]}}}]},{"fieldValue":"angular","totalCount":1,"edges":[{"node":{"excerpt":"Angular 개발을 시작하기 전, 개발에 앞서 개발 환경 구성과 간단한 사용을 먼저 해보자. TypeScript Augular를 본격적으로 하기 전 TypeScript를 설치하기로 하자. 타입스크립트는 동적 타입 언어인 자바스크립트에 명시적으로 타…","fields":{"slug":"/angular-setup/"},"frontmatter":{"date":"May 08, 2018","update":"Jan 01, 0001","title":"Angular 시작하기 (개발 환경 구성)","tags":["angular"]}}}]},{"fieldValue":"babel","totalCount":1,"edges":[{"node":{"excerpt":"주로 CRA(create-react-app)을 이용한 리액트 개발을 주로 해왔고 그로 인해 웹팩(Webpack) 번들러를 통해 간단한 설정 변경 등을 해왔는데 이번에 새로운 번들러인 파셀(Parcel)을 알게되었다. 공식 홈페이지의 헤드라인부터 불꽃…","fields":{"slug":"/parcel-start/"},"frontmatter":{"date":"Mar 23, 2018","update":"Jan 01, 0001","title":"웹팩 대신 파셀(Parcel) 사용해보기 with React, Babel, SASS","tags":["parcel","react","sass","babel"]}}}]},{"fieldValue":"blog","totalCount":7,"edges":[{"node":{"excerpt":"정적 사이트 제작 프레임워크 Gatsby를 이용해 만든 블로그, “Borderless” 테마입니다. 심플한 디자인 마크다운 지원 게시물 태그 기능 게시물 검색 기능 시리즈 게시물 기능 Google Analytics Google Adsense Disq…","fields":{"slug":"/develop-blog-v3_2/"},"frontmatter":{"date":"Dec 30, 2019","update":"Jan 01, 0001","title":"Borderless 블로그 - 소개","tags":["blog"]}}},{"node":{"excerpt":"기존 블로그에서 새로 블로그를 구현했다. 테마 이름은 “Borderless”이다. 말그대로 블로그 디자인 요소에 선이 없어서 이렇게 지었다. 이번에도 동일하게 Gatsby를 이용하여 제작했고 태그와 검색 기능이 있는 것은 이전 블로그와 비슷한 구조이…","fields":{"slug":"/develop-blog-v3_1/"},"frontmatter":{"date":"Dec 30, 2019","update":"Jan 01, 0001","title":"Borderless 블로그 - 개발기","tags":["blog","gatsby"]}}},{"node":{"excerpt":"서론... 일단 Gatsby는 Jekyll과 같은 정적 페이지 생성 프레임워크이다. (본인이 생각하는) 장점은 React + Webpack 으로 되어있다는 점. Jekyll은 익숙치 않아 테마를 사용하고 개인화하는데 불편함이 있었는데 익숙한 Reac…","fields":{"slug":"/create-gatsby-blog/"},"frontmatter":{"date":"Nov 14, 2018","update":"Jan 01, 0001","title":"Gatsby로 블로그 만들기","tags":["gatsby","blog"]}}},{"node":{"excerpt":"블로그 개편, use Gatsby 기존 Jekyll을 이용 다른 사람의 테마를 사용하여 블로그를 운영해오고 있었습니다만 Jekyll로 제작된 블로그를 마음대로 수정하기에는 루비라던가 익숙하지 않은 것이 많아 고민이었는데 마침 Gatsby라는 정적 사…","fields":{"slug":"/new-blog-notice/"},"frontmatter":{"date":"Sep 21, 2018","update":"Jan 01, 0001","title":"블로그 개편 (Jekyll -> Gatsby)","tags":["gatsby","blog"]}}},{"node":{"excerpt":"기존 Jekyll을 이용한 블로그는 현재(2018.09) Gatsby를 이용한 블로그로 개편되었습니다. Jekyll의 minimal-mistakes테마를 이용한 블로그를 만들고 싶다면 아래 게시물은 아직 유효합니다. Jekyll 블로그 테마 적용하기…","fields":{"slug":"/jekyll-apply-theme-simple/"},"frontmatter":{"date":"Apr 28, 2018","update":"Jan 01, 0001","title":"Jekyll 블로그 테마 '쉽게' 적용하기 (minimal-mistakes)","tags":["blog","jekyll"]}}},{"node":{"excerpt":"기존 Jekyll을 이용한 블로그는 현재(2018.09) Gatsby를 이용한 블로그로 개편되었습니다.   \"Gatsby를 이용한 블로그 만들기\" 바로가기 Jekyll의 minimal-mistakes테마를 이용한 블로그를 만들고 싶다면 아래 게시물은…","fields":{"slug":"/jekyll-apply-theme/"},"frontmatter":{"date":"Jan 14, 2018","update":"Jan 01, 0001","title":"Jekyll 블로그 테마 적용하기 (minimal-mistakes)","tags":["blog","jekyll"]}}},{"node":{"excerpt":"참고: 지금 계신 블로그는 기존 Jekyll을 이용한 블로그에서 현재(2018.09) Gatsby를 이용한 블로그로 개편되었습니다.   원래는 Hexo 블로그 프레임워크를 사용하여 블로그를 시작하려했었다. Hexo를 사용하려던 이유는 Node.js …","fields":{"slug":"/start-jekyll-blog/"},"frontmatter":{"date":"Jan 14, 2018","update":"Jan 01, 0001","title":"Jekyll 블로그 시작하기 (MacOS, GitHub Page)","tags":["jekyll","blog","ruby"]}}}]},{"fieldValue":"css","totalCount":3,"edges":[{"node":{"excerpt":"CSS 방법론은 스타일을 정의하는데 있어 엘리먼트의 class와 id를 어떻게 다루는지, 네이밍을 어떻게 하는지의 방법을 정의해 더 직관적인 스타일 코드를 작성하고 팀 단위의 개발을 원할하게 하는데 사용된다. 대표적으로는 BEM, OOCSS, SMA…","fields":{"slug":"/css-bem/"},"frontmatter":{"date":"Nov 12, 2019","update":"Jan 01, 0001","title":"CSS 방법론 - BEM","tags":["css"]}}},{"node":{"excerpt":"라디오 버튼의 스타일 바꾸기 검색을 통해 쉽게 얻을 수 있는 라디오 버튼의 스타일 바꾸는 것은 대부분 :after, :before 를 사용하는데, 그렇게 되면 원하는대로 바꾸기가 쉽지 않고 원래의 개체가 노출되어 위치 조절을 해야하는 등 어려움이 있…","fields":{"slug":"/radio-style-change/"},"frontmatter":{"date":"Oct 19, 2018","update":"Jan 01, 0001","title":"Radio Button의 색상 등 css를 바꾸기","tags":["css"]}}},{"node":{"excerpt":"HTML 태그안에 데이터 속성(data-)을 두어 그 데이터를 JS나 CSS에서 불러 쓸 수 있다. HTML  뒤에 데이터 속성의 이름을 입력한다. , , ,  와 영문 소문자가 입력 가능하다. (대문자는 불가능) 위의 예제에서는 test-keywo…","fields":{"slug":"/html-dataset/"},"frontmatter":{"date":"Feb 10, 2018","update":"Jan 01, 0001","title":"HTML 데이터 속성 사용하기 (data-, dataset)","tags":["html","javascript","css"]}}}]},{"fieldValue":"gatsby","totalCount":3,"edges":[{"node":{"excerpt":"기존 블로그에서 새로 블로그를 구현했다. 테마 이름은 “Borderless”이다. 말그대로 블로그 디자인 요소에 선이 없어서 이렇게 지었다. 이번에도 동일하게 Gatsby를 이용하여 제작했고 태그와 검색 기능이 있는 것은 이전 블로그와 비슷한 구조이…","fields":{"slug":"/develop-blog-v3_1/"},"frontmatter":{"date":"Dec 30, 2019","update":"Jan 01, 0001","title":"Borderless 블로그 - 개발기","tags":["blog","gatsby"]}}},{"node":{"excerpt":"서론... 일단 Gatsby는 Jekyll과 같은 정적 페이지 생성 프레임워크이다. (본인이 생각하는) 장점은 React + Webpack 으로 되어있다는 점. Jekyll은 익숙치 않아 테마를 사용하고 개인화하는데 불편함이 있었는데 익숙한 Reac…","fields":{"slug":"/create-gatsby-blog/"},"frontmatter":{"date":"Nov 14, 2018","update":"Jan 01, 0001","title":"Gatsby로 블로그 만들기","tags":["gatsby","blog"]}}},{"node":{"excerpt":"블로그 개편, use Gatsby 기존 Jekyll을 이용 다른 사람의 테마를 사용하여 블로그를 운영해오고 있었습니다만 Jekyll로 제작된 블로그를 마음대로 수정하기에는 루비라던가 익숙하지 않은 것이 많아 고민이었는데 마침 Gatsby라는 정적 사…","fields":{"slug":"/new-blog-notice/"},"frontmatter":{"date":"Sep 21, 2018","update":"Jan 01, 0001","title":"블로그 개편 (Jekyll -> Gatsby)","tags":["gatsby","blog"]}}}]},{"fieldValue":"git","totalCount":3,"edges":[{"node":{"excerpt":"git에서 특정한 파일만 merge 하고 싶을 때가 있다.  브랜치를  브랜치에 merge 하려하는데 특정 파일()만 병합하고 싶을 상황일 때 쓸 수 있는 방법이다. 방법 1 merge 키워드를 사용하지 않지만 아래 방법으로 특정 파일만 합치는 것이…","fields":{"slug":"/git-specific-files-merge/"},"frontmatter":{"date":"Nov 06, 2018","update":"Sep 23, 2020","title":"git 특정한 파일 병합(merge) 하기","tags":["git"]}}},{"node":{"excerpt":"몇시간 전부터(현재 181023 04:41) github 가 이상하다, 5시간 전에는 로그인 부분이 이상이 있었다, 지금은 이부분은 해결되고 github page 를 업데이트해도 반영이 되지 않고 있다. 올해들어 세번정도 github 시스템 이상을 …","fields":{"slug":"/github-system-status/"},"frontmatter":{"date":"Oct 23, 2018","update":"Jan 01, 0001","title":"GitHub 서버 오류, 시스템 이상할 때 상태를 확인하기","tags":["git","github"]}}},{"node":{"excerpt":"처럼 명령어를 입력하면 Log를 보기 좋게 출력할 수 있는데, 매번 이 명령어를 치기도 곤혹이다.  Linux의 alias를 이용하여 특정 명령어를 별도의 키워드로 지정하여 간단하게 사용할 수 있는다. 예로 를 로 간단히 사용하려면 아래와 같은 명령…","fields":{"slug":"/git-alias/"},"frontmatter":{"date":"Dec 30, 2017","update":"Jan 01, 0001","title":"Git, Alias(별칭)를 이용하여 편리하게 명령어 사용하기","tags":["git"]}}}]},{"fieldValue":"github","totalCount":2,"edges":[{"node":{"excerpt":"설치 우선 Homebrew 를 통해 gpg 패키지를 설치한다, 추가로 gpg 키 관리 프로그램인 GPG-SUITE를 설치한다. key 생성 키 생성 방법은 두가지가 있다. gpg-suite를 통한 설치 터미널내에서 설치 1번의 경우 시스템 환경설정에…","fields":{"slug":"/github-gpg-key/"},"frontmatter":{"date":"Oct 24, 2018","update":"Jan 31, 2020","title":"GitHub에 GPG 서명 등록하기 (macOS)","tags":["github"]}}},{"node":{"excerpt":"몇시간 전부터(현재 181023 04:41) github 가 이상하다, 5시간 전에는 로그인 부분이 이상이 있었다, 지금은 이부분은 해결되고 github page 를 업데이트해도 반영이 되지 않고 있다. 올해들어 세번정도 github 시스템 이상을 …","fields":{"slug":"/github-system-status/"},"frontmatter":{"date":"Oct 23, 2018","update":"Jan 01, 0001","title":"GitHub 서버 오류, 시스템 이상할 때 상태를 확인하기","tags":["git","github"]}}}]},{"fieldValue":"html","totalCount":3,"edges":[{"node":{"excerpt":"처음 웹개발을 배울 때 웹표준을 배웠던 것 사실만 어렴풋이 기억난다. 그 이후 개발을 해오면서는 거의 신경쓰지 않고 개발했던 것 같다. 얼마 전, 이 블로그를 개발하면서 검색 엔진 노출을 위해 웹표준, SEO를 신경써 개발하다보니 다시 한번 살펴봐야…","fields":{"slug":"/meta-tag/"},"frontmatter":{"date":"Nov 15, 2018","update":"Jan 01, 0001","title":"meta 태그를 알아보자 (웹표준과 SEO)","tags":["SEO","html"]}}},{"node":{"excerpt":"처음 html, javascript를 공부 할 때는 script 태그는 head 태그에 위치하게끔 하는 코드나, 또는 body 태그의 어디에 위치하건 그 위치에 대해 별 의미를 두지 않는 코드들이 많았다. 하지만 지금은 항상 스크립트는 body태그의…","fields":{"slug":"/js-script-position/"},"frontmatter":{"date":"May 02, 2018","update":"Jan 01, 0001","title":"HTML에서 script태그는 어디에 위치해야 할까?","tags":["javascript","html"]}}},{"node":{"excerpt":"HTML 태그안에 데이터 속성(data-)을 두어 그 데이터를 JS나 CSS에서 불러 쓸 수 있다. HTML  뒤에 데이터 속성의 이름을 입력한다. , , ,  와 영문 소문자가 입력 가능하다. (대문자는 불가능) 위의 예제에서는 test-keywo…","fields":{"slug":"/html-dataset/"},"frontmatter":{"date":"Feb 10, 2018","update":"Jan 01, 0001","title":"HTML 데이터 속성 사용하기 (data-, dataset)","tags":["html","javascript","css"]}}}]},{"fieldValue":"javascript","totalCount":36,"edges":[{"node":{"excerpt":"Debounce? 디바운스란 과도한 연속적인 요청을 방지하기 위해 사용합니다.\n연속된 요청 중 마지막 요청만을 실행합니다. (또는 첫번째 요청만) 예를 들어 검색창에 타이핑을 할때마다 추천 검색어를 불러오는 API를 사용한다면, 빠르게 타이핑되는 자…","fields":{"slug":"/js-debounce/"},"frontmatter":{"date":"Sep 20, 2020","update":"Jan 01, 0001","title":"자바스크립트 Debounce","tags":["javascript"]}}},{"node":{"excerpt":"자바스크립트만을 사용해 React와 비슷하게 Component를 구현해보는 것이 오늘의 목표입니다. 기본적인 최신 JS와 React에 대한 이해가 있다는 것을 가정으로 기술되었습니다. 구현 할 것은 검색 시 해당 키워드에 해당하는 랜덤한 이미지를 하…","fields":{"slug":"/js-component/"},"frontmatter":{"date":"Sep 18, 2020","update":"Jan 01, 0001","title":"자바스크립트로 컴포넌트 구현하기","tags":["javascript"]}}},{"node":{"excerpt":"2020년을 맞아 이미 많이 알고 있는 ES2015(ES6) 다음부터인 ES2016부터 ES2020까지 새로 나온 자바스크립트 기능들을 살펴보려고 합니다.  모두 소개하는 건 아니고 비교적 도움이 되는, 대표적인 것들을 추려 소개합니다. 또한 기초적…","fields":{"slug":"/es2016-es2020/"},"frontmatter":{"date":"Jan 22, 2020","update":"Feb 06, 2020","title":"ECMAScript ES2016~ES2020 정리","tags":["javascript"]}}},{"node":{"excerpt":"해당 포스트는 macOS 환경을 기준으로 작성되었습니다 NVM(Node Version Manager) Node 버전을 쉽게 관리 할 수 있다.\n예로 사용하던 패키지가 Node 버전이 업데이트를 함에 따라 호환이 되지 않을 경우가 생길 때 NVM없이 …","fields":{"slug":"/nvm-install/"},"frontmatter":{"date":"Aug 08, 2019","update":"Jan 01, 0001","title":"NVM, Node 설치 및 관리하기","tags":["node","javascript"]}}},{"node":{"excerpt":"a, b, c.. 라는 함수가 있다고 가정하자. 위와 같이 함수가 중첩되고 연속된다면 가독성도 좋지않고 작성하는데도 어려움이 있다.\n함수들을 연속적으로 사용하는 함수, 함수들을 함축하는 함수인 go/pipe에 대해 알아보자 go go 함수는 인자를 …","fields":{"slug":"/functional-go-pipe/"},"frontmatter":{"date":"Jul 12, 2019","update":"Jan 01, 0001","title":"JavaScript 함수형 프로그래밍, go / pipe","tags":["javascript"]}}},{"node":{"excerpt":"이터러블 프로토콜은 ES6에서 도입된 것으로 간단히 말하면 \n이터러블 프로토콜은 순회(반복) 가능한 객체를 나타내는 프로토콜이라 할 수 있다.  반복문,  전개 연산자(Spread Operator), 구조 분해 등과 함께 동작 할 수 있도록 한 프로…","fields":{"slug":"/iterable-protocol/"},"frontmatter":{"date":"Jul 10, 2019","update":"Jan 01, 0001","title":"이터러블 프로토콜, 이터러블/이터레이터","tags":["ES6","javascript"]}}},{"node":{"excerpt":"AJAX(AsynchronousJavaScriptAndXML)는 비동기 자바스크립트를 뜻하는 것으로, 이제는 비동기적 자바스크립트 동작을 하는 기술들을 통들어서도 AJAX라고 부릅니다. 최초로 Microsoft의 Internet Explorer가 탑…","fields":{"slug":"/ajax-xhr-fetch/"},"frontmatter":{"date":"May 14, 2019","update":"Jan 01, 0001","title":"AJAX, XMLHttpRequest와 Fetch 살펴보기","tags":["javascript","ajax","ES6"]}}},{"node":{"excerpt":"2018년의 Javascript 통계를 나타낸 사이트를 발견하고 간단히 정리해보았다. 약 2만명이 넘는 Javascript 개발자를 대상으로 설문조사를 한 결과이다. 자세한 통계는 아래 자료 출처 사이트에서 참고할 수 있다. 자료 출처 : 2018 …","fields":{"slug":"/javascript-2018/"},"frontmatter":{"date":"Dec 04, 2018","update":"Jan 01, 0001","title":"2018년의 JavaScript 동향, 그리고 전망","tags":["javascript"]}}},{"node":{"excerpt":"처음 html, javascript를 공부 할 때는 script 태그는 head 태그에 위치하게끔 하는 코드나, 또는 body 태그의 어디에 위치하건 그 위치에 대해 별 의미를 두지 않는 코드들이 많았다. 하지만 지금은 항상 스크립트는 body태그의…","fields":{"slug":"/js-script-position/"},"frontmatter":{"date":"May 02, 2018","update":"Jan 01, 0001","title":"HTML에서 script태그는 어디에 위치해야 할까?","tags":["javascript","html"]}}},{"node":{"excerpt":"Javascript Hoisting에 대해 다시 살펴보던 도중, 예전에 공부할땐 var를 대상으로 공부했으니 깨닫지 못했는데 이번에 let, const를 가지고 해보니... 호이스팅이 되지 않았다. (정확히 말하면 호이스팅이 되지 않는 것은 아니다.…","fields":{"slug":"/js-let-cont-hoisting/"},"frontmatter":{"date":"Apr 26, 2018","update":"Jan 01, 0001","title":"ES6, Hoisting으로 다시 보는 let, const","tags":["ES6","javascript"]}}},{"node":{"excerpt":"Vue.JS 설치 CDN으로 설치하기 간단히 index.html 내에 위 코드를 추가하는 것만으로 vue를 간단하게 사용할 수 있다. 다만 CDN을 기반으로 Vue를 개발하려면 .vue 확장자를 이용하는 개발은 할 수 없어 싱글 파일 컴포넌트 개발이…","fields":{"slug":"/vuejs-install/"},"frontmatter":{"date":"Feb 21, 2018","update":"Jan 01, 0001","title":"Vue.JS 및 Vue 개발 도구 설치하기","tags":["vue","javascript"]}}},{"node":{"excerpt":"HTML 태그안에 데이터 속성(data-)을 두어 그 데이터를 JS나 CSS에서 불러 쓸 수 있다. HTML  뒤에 데이터 속성의 이름을 입력한다. , , ,  와 영문 소문자가 입력 가능하다. (대문자는 불가능) 위의 예제에서는 test-keywo…","fields":{"slug":"/html-dataset/"},"frontmatter":{"date":"Feb 10, 2018","update":"Jan 01, 0001","title":"HTML 데이터 속성 사용하기 (data-, dataset)","tags":["html","javascript","css"]}}},{"node":{"excerpt":"자바스크립트에서 함수선언문과 함수표현식의 차이점을 인식해두는 것은 중요한 점이다.\n큰 차이점이라 하면 호이스팅(Hoisting)이라고 할 수 있다. 우선 함수선언문과 같은 경우를 살펴보자. 함수 선언문의 경우에는 호이스팅에 의해 함수 전체가 호이스팅…","fields":{"slug":"/js-functions/"},"frontmatter":{"date":"Jan 02, 2018","update":"Jan 01, 0001","title":"Javascript 함수선언문과 함수표현식","tags":["javascript"]}}},{"node":{"excerpt":"Hoist는 \"끌어올리다\"라는 뜻을 가지고 있다. 자바스크립트 엔진은 코드를 실행하기 전에 코드 전체를 살펴본다. 이 과정에서 선언된 내용이 있는지 '선언'을 살펴본다. 그리고 그 '선언'된 내용들을 모두 호이스팅. 즉, 끌어올리게 된다.   아래 …","fields":{"slug":"/js-hoisting/"},"frontmatter":{"date":"Dec 30, 2017","update":"Jan 01, 0001","title":"자바스크립트 호이스팅(Hoisting)","tags":["javascript"]}}},{"node":{"excerpt":"환경 Create-react-app (CRA) SCSS 로 적용 적용법 react 설정 eject & sass 패키지 설치  를 실행한다.\n해당 명령어는 에 위치하던 환경설정을 프로젝트 루트 경로로 이동시켜 상세한 환경설정이 가능하도록 한다.   두…","fields":{"slug":"/js-react-apply-sass/"},"frontmatter":{"date":"Nov 08, 2017","update":"Jan 01, 0001","title":"React 프로젝트에 SASS 적용하기","tags":["react","javascript","sass"]}}},{"node":{"excerpt":"타 언어를 사용하다가(파이썬 제외...) 자바스크립트를 처음 접한 사람에게는 세미콜론을 쓰지 않고도 오류가 나지 않는 것을 보고 꽤나 놀랐을 것이다. \"자바스크립트에서는 세미콜론을 쓰지 않아도 오류가 나지 않는데 그렇다면 세미콜론을 쓰지 않고 짧게 …","fields":{"slug":"/js-semicolon-asi/"},"frontmatter":{"date":"Oct 17, 2017","update":"Jan 01, 0001","title":"자바스크립트에서 세미콜론(;)을 안써도 될까?","tags":["javascript"]}}},{"node":{"excerpt":"Javascript는 Java와 달리 int, double 같은 숫자 타입이 나눠져있지 않다. number 하나로 정수(Integer)와 부동 소수점 수를 모두 표현한다. 숫자 리터럴 .12, 12. 과 같은 방식은 틀린 것은 아니더라도 좋은 코드라…","fields":{"slug":"/js-number-type/"},"frontmatter":{"date":"Oct 16, 2017","update":"Jan 01, 0001","title":"자바스크립트의 숫자 타입(Number Type)","tags":["javascript"]}}},{"node":{"excerpt":"Set 중복없이 유일한 값을 저장하기 위한 타입, 이미 존재하는지 체크할때 유용하다 WeakSet 참조를 가지고 있는 객체만 저장이 가능하다. 참조를 가지고 있던 객체가 참조를 잃게 되면 (null 이 되거나…) 가비지컬렉션의 대상이 된다. 객체를 …","fields":{"slug":"/js-es6-set-map/"},"frontmatter":{"date":"Oct 14, 2017","update":"Jan 01, 0001","title":"자바스크립트 ES6 Set, WeakSet / Map, WeakMap","tags":["javascript","ES6"]}}},{"node":{"excerpt":"자바스크립트의 배열은 어떤 타입이던 담을 수 있고, 배열 크기도 미리 정하지 않는다. 배열에서 빈 슬롯의 주의점 배열에서 주의 해야할 점은 중간에 빈 구멍이 있는 배열을 조심해야 한다. 위와 같은 코드가 있을때 배열의 1번은 비어있을 것이다. 어떤 …","fields":{"slug":"/js-array/"},"frontmatter":{"date":"Sep 11, 2017","update":"Jan 01, 0001","title":"자바스크립트의 배열(Array)","tags":["javascript"]}}},{"node":{"excerpt":"Javascript Variable Types 자바스크립트의 변수는 모든 데이터 타입을 수용할 수 있도록 되어있다.  라는 특정 변수의 데이터 타입을 확인하여 문자열로 반환하는 연산자가 있다. 값은 타입을 가진다 / 변수에는 따로 타입이란 없다\n변수…","fields":{"slug":"/js-variable-types/"},"frontmatter":{"date":"Sep 11, 2017","update":"Jan 01, 0001","title":"자바스크립트의 타입들","tags":["javascript"]}}},{"node":{"excerpt":"Proxy : https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Global_Objects/Proxy 권장되는 패턴 reference 모던 자바스크립트(javascript) 개발을 위한 …","fields":{"slug":"/js-es6-proxy/"},"frontmatter":{"date":"Sep 09, 2017","update":"Jan 01, 0001","title":"자바스크립트 ES6 프록시(Proxy)","tags":["javascript","ES6"]}}},{"node":{"excerpt":"ES6에서 출현한 module 기능은 브라우저 호환성이 아직은 완전하지 않다. devOps로 webpack, babel 등을 활용해 사용해 서비스 코드를 만드는 것이 좋다. 기본 사용법 app.js foo.js 심화, 서비스 코드 구현 app.js …","fields":{"slug":"/js-es6-module/"},"frontmatter":{"date":"Sep 01, 2017","update":"Jan 01, 0001","title":"자바스크립트 ES6 module(export&import)","tags":["javascript","ES6"]}}},{"node":{"excerpt":"setPrototypeOf 로 프로토타입 객체를 추가 할 수 있다.  object에 prototype을 추가한다. setPrototypeOf 로 개체간 prototype Chain 만들기 reference 모던 자바스크립트(javascript) 개발…","fields":{"slug":"/js-es6-setprototypeof/"},"frontmatter":{"date":"Sep 01, 2017","update":"Jan 01, 0001","title":"자바스크립트 ES6 Object setPrototypeOf","tags":["javascript","ES6"]}}},{"node":{"excerpt":"아래 코드는 Object create를 사용한 코드이다. 아래 코드는 위의 코드에 Object assign을 사용한 코드이다.  와 같이 계속해서 추가해야하는 수고를 덜어줄 수 있다. Object assign 으로 Immutable 객체 만들기 re…","fields":{"slug":"/js-es6-object-assign/"},"frontmatter":{"date":"Aug 10, 2017","update":"Jan 01, 0001","title":"자바스크립트 ES6 Object.assign","tags":["javascript","ES6"]}}},{"node":{"excerpt":"자바스크립트에도 이번 ES6에서 Class라는 키워드가 생겼다. 아래는 기존 자바스크립트의 코드이다. 아래는 Class를 활용한 코드이다. 위와 같이 클래스로 똑같은 코드를 구현할 수 있다. 하지만 그렇다고 클래스라는 것이 완전히 새로 생긴 것이 아…","fields":{"slug":"/js-es6-class/"},"frontmatter":{"date":"Aug 10, 2017","update":"Jan 01, 0001","title":"자바스크립트 ES6 클래스(Class)","tags":["javascript","ES6"]}}},{"node":{"excerpt":"ES6 에 출현한 새로운 형태의 함수 표현 방법 Arrow Function, this context 위의 코드는 아무런 문제 없이 작동하는 코드이다, runTimeout은 settimeout때문에 이벤트큐에 등록 된뒤 실행되는 것이라 this가 해당…","fields":{"slug":"/js-es6-arrow-function/"},"frontmatter":{"date":"Jul 21, 2017","update":"Jan 01, 0001","title":"자바스크립트 ES6 Arrow Function","tags":["javascript","ES6"]}}},{"node":{"excerpt":"Javascript에서는 배열로 보이지만 정작 배열이 아닌 형태의 것들이 존재한다. 예로 메소드로 전달되는 인자들을 활용하는 arguments 객체같은 경우에도 배열같아보이지만 실제 배열은 아니다.\n따라서, map과 같은 배열을 다루는 메소드를 활용…","fields":{"slug":"/js-es6-from/"},"frontmatter":{"date":"Jun 29, 2017","update":"Jan 01, 0001","title":"자바스크립트 ES6 from","tags":["javascript","ES6"]}}},{"node":{"excerpt":"쉽게 말해 배열을 펼쳐주는 역할이다. '' ''를 떼어낸다고 생각하면 쉽다. 배열을 바꾸지 않고 새로운 값을 복사, 배열을 합치거나 배열을 펼쳐진 상태로 파라메터로 전달 등의 활용이 가능하다.","fields":{"slug":"/js-es6-spread-operator/"},"frontmatter":{"date":"Jun 29, 2017","update":"Jan 01, 0001","title":"자바스크립트 ES6 Spread operator, 펼침 연산자","tags":["javascript","ES6"]}}},{"node":{"excerpt":"Javascript 'For Loop' 자바스크립트에서 사용하는 for 반복문의 유형에 대해 알아보자. for  for in  for of (ES6)  - for  - for in  variable object 일때 variable = object의…","fields":{"slug":"/js-for-loop/"},"frontmatter":{"date":"Jun 29, 2017","update":"Jan 01, 0001","title":"자바스크립트 for문들의 유형과 차이점","tags":["javascript"]}}},{"node":{"excerpt":"String.prototype.startsWith() 문자열이 특정 문자로 시작하는지 확인, 결과를 true, false로 반환. String.prototype.endsWith() 문자열이 특정 문자로 끝나는지 확인, 결과를 true, false로 …","fields":{"slug":"/js-es6-string-methods/"},"frontmatter":{"date":"Jun 29, 2017","update":"Jan 01, 0001","title":"자바스크립트 ES6 String Methods","tags":["javascript","ES6"]}}},{"node":{"excerpt":"ES6 (ES2015) 에서는 새로운 선언 방법이 생겼는데, 그것이 const와 let이다. 기존에 다른 프로그래밍 언어를 사용하고 왔다면 처음 var 를 접할때 당황스러운 점을 느껴본 적이 있을 것이다. var의 관대함 때문이다. 그런 것을 비교하…","fields":{"slug":"/js-es6-const-let/"},"frontmatter":{"date":"Jun 28, 2017","update":"Jan 01, 0001","title":"자바스크립트 ES6 const, let","tags":["javascript","ES6"]}}},{"node":{"excerpt":"출처 : https://velopert.com/1130 - Mount 컴포넌트가 실행 될 때, 'Mount 된다' 라고 표현. 컴포넌트가 시작되면 제일 초기의 작업은 context, defaultProps, state 저장 componentWillM…","fields":{"slug":"/js-react-lifecycle/"},"frontmatter":{"date":"Jun 20, 2017","update":"Jan 01, 0001","title":"리액트 생명주기 (React LifeCycle)","tags":["javascript","react"]}}},{"node":{"excerpt":"스코프 = 현재 접근 할 수 있는 변수들의 범위   예제 1 버튼 3개를 각각 클릭했을때 결과값은 모두 \"Click btn3\"가 나온다. 이벤트 핸들러의 콜백 함수가 작성되어 있는데 그 콜백 함수는 콜백함수 밖에 있는 변수들에 접근 할 수 있는 스코…","fields":{"slug":"/js-scope/"},"frontmatter":{"date":"Jun 19, 2017","update":"Jan 01, 0001","title":"자바스크립트의 스코프(Scope)","tags":["javascript"]}}},{"node":{"excerpt":"call(), apply() 두 함수는 function 객체의 기본 내장 함수이다.\n일반적으로 함수가 호출될 때는 내부적으로 call() 함수로 변형되어서 처리된다.\ncall과 apply 함수는 this를 자동적으로 만들어진 this가 아닌 지정한 …","fields":{"slug":"/js-this/"},"frontmatter":{"date":"May 14, 2017","update":"Jan 01, 0001","title":"자바스크립트 this","tags":["javascript"]}}},{"node":{"excerpt":"함수, 함수가 선언될 때의 environment로 구성   함수가 정의 될 때의 environment가 함께 closure로 결합되면서, 다양한 활용이 가능   counter1의 closure 함수 : function Increase(){} 환경 :…","fields":{"slug":"/js-clouser/"},"frontmatter":{"date":"Apr 19, 2017","update":"Jan 01, 0001","title":"자바스크립트 클로저(Closure)","tags":["javascript"]}}},{"node":{"excerpt":"자바스크립트에서 모든 객체는 자신의 부모 객체와 연결 되어있다. 이것을 이용하여 객체지향에서 자식이 부모 객체의 요소를 가져다 쓸 수 있는 상속 개념을 사용할 수 있다. 모든 객체는 자신을 생성한 생성자 함수의 prototype 프로퍼티가 가리키는 …","fields":{"slug":"/js-prototype/"},"frontmatter":{"date":"Apr 18, 2017","update":"Jan 01, 0001","title":"자바스크립트 프로토타입(Prototype)","tags":["javascript"]}}}]},{"fieldValue":"jekyll","totalCount":3,"edges":[{"node":{"excerpt":"기존 Jekyll을 이용한 블로그는 현재(2018.09) Gatsby를 이용한 블로그로 개편되었습니다. Jekyll의 minimal-mistakes테마를 이용한 블로그를 만들고 싶다면 아래 게시물은 아직 유효합니다. Jekyll 블로그 테마 적용하기…","fields":{"slug":"/jekyll-apply-theme-simple/"},"frontmatter":{"date":"Apr 28, 2018","update":"Jan 01, 0001","title":"Jekyll 블로그 테마 '쉽게' 적용하기 (minimal-mistakes)","tags":["blog","jekyll"]}}},{"node":{"excerpt":"기존 Jekyll을 이용한 블로그는 현재(2018.09) Gatsby를 이용한 블로그로 개편되었습니다.   \"Gatsby를 이용한 블로그 만들기\" 바로가기 Jekyll의 minimal-mistakes테마를 이용한 블로그를 만들고 싶다면 아래 게시물은…","fields":{"slug":"/jekyll-apply-theme/"},"frontmatter":{"date":"Jan 14, 2018","update":"Jan 01, 0001","title":"Jekyll 블로그 테마 적용하기 (minimal-mistakes)","tags":["blog","jekyll"]}}},{"node":{"excerpt":"참고: 지금 계신 블로그는 기존 Jekyll을 이용한 블로그에서 현재(2018.09) Gatsby를 이용한 블로그로 개편되었습니다.   원래는 Hexo 블로그 프레임워크를 사용하여 블로그를 시작하려했었다. Hexo를 사용하려던 이유는 Node.js …","fields":{"slug":"/start-jekyll-blog/"},"frontmatter":{"date":"Jan 14, 2018","update":"Jan 01, 0001","title":"Jekyll 블로그 시작하기 (MacOS, GitHub Page)","tags":["jekyll","blog","ruby"]}}}]},{"fieldValue":"mac","totalCount":3,"edges":[{"node":{"excerpt":"개발환경 구성에 앞서 제일 먼저 필요하다고 할 수 있는 터미널 환경 세팅. 여기서는 zsh 쉘을 사용하며, oh my zsh 설치 후 zsh 플러그인 매니저인 zplug를 설치하여 플러그인을 관리합니다. 또한 터미널 앱으로는 hyper를 사용합니다.…","fields":{"slug":"/mac-terminal-setting/"},"frontmatter":{"date":"Jul 24, 2019","update":"Jan 01, 0001","title":"mac 터미널 환경 구성하기 (zsh, oh my zsh, zplug, hyper)","tags":["mac"]}}},{"node":{"excerpt":"현재 mac Catalina developer beta의 환경으로 사용하고 있었는데, 지금까지 설치한 앱들이 너무 많고 메뉴바 또한 넘처나기 직전이다. bartender, dozer와 같은 메뉴바 정리 앱으로 정리를 했는데도 말이다. 그래서 macO…","fields":{"slug":"/my-mac-apps/"},"frontmatter":{"date":"Jul 15, 2019","update":"Jan 01, 0001","title":"사용중인 mac App 목록 및 앱 추천","tags":["mac"]}}},{"node":{"excerpt":"₩ -> ` 코드를 작성하거나 마크다운 문서를 작성할때 한글키 입력 상태일때 키보드의 (~`)키를 누르면 ₩가 입력되는 것이 별거 아닌 것 같지만 상당히 불편한 요소로 작용합니다. 생각보다 원화(₩) 문자를 쓸 일이 없으므로 아예 백쿼트(`) 문자가…","fields":{"slug":"/mac-keybind-won-bq/"},"frontmatter":{"date":"Jul 02, 2018","update":"Jan 01, 0001","title":"mac의 한글키에서 원화(₩)가 아닌 백쿼트(`)가 입력되도록 하기","tags":["mac"]}}}]},{"fieldValue":"mongodb","totalCount":2,"edges":[{"node":{"excerpt":"MongoDB 문서를 참고해,\nCheatSheet 개념으로 정리해본 기초 Mongo Shell CRUD 명령어. 이 포스트에서는 기초적인 것만 다루며  Option, Evaluation Query 등은 다루지 않습니다. Database Databas…","fields":{"slug":"/mongodb-basic-crud/"},"frontmatter":{"date":"Jul 30, 2019","update":"Jan 01, 0001","title":"MongoDB 기초, CRUD 명령어","tags":["mongodb"]}}},{"node":{"excerpt":"MongoDB를 본격적으로 사용하기 앞서,\n설치와 실행 그리고 추가적인 툴의 설치와 사용까지 기본적으로 알아보겠습니다. macOS / HomeBrew의 설치 환경에서 진행됩니다. Install MongoDB Tap the MongoDB Homebre…","fields":{"slug":"/mongodb-install/"},"frontmatter":{"date":"Jul 20, 2019","update":"Jan 01, 0001","title":"MongoDB 설치하기 (mac, homebrew)","tags":["mongodb"]}}}]},{"fieldValue":"mysql","totalCount":1,"edges":[{"node":{"excerpt":"MacOS 재설치 후 기본적인 설정을 하면서 간단히 정리해본 MySQL 설치 과정 MySQL 설치 brew 명령어를 위한 HomeBrew 패키지 관리자 미설치시 아래 명령어를 통해 설치 필요  MySQL 설정 아래 명령어로 mysql을 시작합니다. …","fields":{"slug":"/mac-install-mysql/"},"frontmatter":{"date":"Jan 29, 2018","update":"Jan 01, 0001","title":"간단하게 MySQL 설치하기 (Mac, HomeBrew)","tags":["mysql"]}}}]},{"fieldValue":"netflix","totalCount":1,"edges":[{"node":{"excerpt":"Netflix AutoSkip 넷플릭스 인트로, 줄거리 자동 스킵 다음 에피소드 재생 대기 시간 없이 바로 재생 넷플릭스를 런칭때부터 쭈욱 쓰던 입장으로 항상 불편했던 것이 있는데, 인트로 영상이 자동으로 스킵되지 않는다는 것이다. 스킵 버튼이 있긴…","fields":{"slug":"/netflix-autoskip/"},"frontmatter":{"date":"Apr 06, 2018","update":"Jan 01, 0001","title":"넷플릭스 정주행을 위한 인트로 자동 스킵 크롬 확장 프로그램 (Netflix AutoSkip)","tags":["netflix"]}}}]},{"fieldValue":"node","totalCount":2,"edges":[{"node":{"excerpt":"해당 포스트는 macOS 환경을 기준으로 작성되었습니다 NVM(Node Version Manager) Node 버전을 쉽게 관리 할 수 있다.\n예로 사용하던 패키지가 Node 버전이 업데이트를 함에 따라 호환이 되지 않을 경우가 생길 때 NVM없이 …","fields":{"slug":"/nvm-install/"},"frontmatter":{"date":"Aug 08, 2019","update":"Jan 01, 0001","title":"NVM, Node 설치 및 관리하기","tags":["node","javascript"]}}},{"node":{"excerpt":"MacOS 재설치 후 기본적인 설정을 하면서 간단히 정리해본 Node.js, npm, yarn 설치 과정 Node, NPM 설치 Node를 설치하기에 가장 간단하고 좋은 방법이라 생각하는 HomeBrew를 통한 설치를 해보겠습니다. 좋은 방법이라는 …","fields":{"slug":"/install-node-yarn/"},"frontmatter":{"date":"Jan 29, 2018","update":"Jan 01, 0001","title":"간단하게 Node.js, npm, yarn 설치하기","tags":["node","npm","yarn"]}}}]},{"fieldValue":"npm","totalCount":1,"edges":[{"node":{"excerpt":"MacOS 재설치 후 기본적인 설정을 하면서 간단히 정리해본 Node.js, npm, yarn 설치 과정 Node, NPM 설치 Node를 설치하기에 가장 간단하고 좋은 방법이라 생각하는 HomeBrew를 통한 설치를 해보겠습니다. 좋은 방법이라는 …","fields":{"slug":"/install-node-yarn/"},"frontmatter":{"date":"Jan 29, 2018","update":"Jan 01, 0001","title":"간단하게 Node.js, npm, yarn 설치하기","tags":["node","npm","yarn"]}}}]},{"fieldValue":"parcel","totalCount":1,"edges":[{"node":{"excerpt":"주로 CRA(create-react-app)을 이용한 리액트 개발을 주로 해왔고 그로 인해 웹팩(Webpack) 번들러를 통해 간단한 설정 변경 등을 해왔는데 이번에 새로운 번들러인 파셀(Parcel)을 알게되었다. 공식 홈페이지의 헤드라인부터 불꽃…","fields":{"slug":"/parcel-start/"},"frontmatter":{"date":"Mar 23, 2018","update":"Jan 01, 0001","title":"웹팩 대신 파셀(Parcel) 사용해보기 with React, Babel, SASS","tags":["parcel","react","sass","babel"]}}}]},{"fieldValue":"php","totalCount":1,"edges":[{"node":{"excerpt":"Cookie 클라이언트(브라우저)에 데이터를 저장한다.   위 코드의 문제점 위 코드가 HTML 코드 안에 포함되어있다면   위와 같은 Warning을 만나게 되는데 HTML 코드 바깥으로 setCookie() 를 옮기면 해결할 수 있다 자세한 내용…","fields":{"slug":"/php-cookie-session/"},"frontmatter":{"date":"Nov 06, 2017","update":"Jan 01, 0001","title":"PHP Cookie, Session","tags":["php"]}}}]},{"fieldValue":"python","totalCount":1,"edges":[{"node":{"excerpt":"(macOS Mojave 환경에서의 포스팅입니다) pyenv는 nvm(Node Version Manager)과 비슷하게 필요에 따라 다양한 파이썬 버전으로 실행할 수 있는 환경을 제공하는 버전 매니저이다. 프로젝트별 버전을 달리 사용하는 용도가 아니…","fields":{"slug":"/install-python-use-pyenv/"},"frontmatter":{"date":"Feb 20, 2019","update":"Jan 01, 0001","title":"pyenv를 이용해 Python 설치하기 (macOS)","tags":["python"]}}}]},{"fieldValue":"react","totalCount":9,"edges":[{"node":{"excerpt":"뒤늦은 Hooks 포스팅입니다. Hooks 기본을 정리해보고, 사용해오면서 알게 된 점도 정리해봅니다. 간단히 useState에 대해 설명하고, useEffect에 대해서는 조금 더 자세하게 알아봅니다. Hooks는 React 16.8부터 등장한 새…","fields":{"slug":"/react-hooks/"},"frontmatter":{"date":"Jan 08, 2020","update":"Jan 01, 0001","title":"React Hooks: useState, useEffect 알아보기","tags":["react"]}}},{"node":{"excerpt":"어떠한 이유로 컴포넌트의 업데이트를 하고 싶지 않을 때 사용 할 수 있다. 이전에는 을 하더라도 컴포넌트가 업데이트 되었으나 React 16 부터는 업데이트가 되지 않는다. 간단한 코드를 살펴보자 위의 코드는 state를 변경해가며 카운트가 하나씩 …","fields":{"slug":"/react-16-setstate-null/"},"frontmatter":{"date":"Nov 01, 2018","update":"Jan 01, 0001","title":"React 16, Returning null from setState","tags":["react"]}}},{"node":{"excerpt":"리액트 16 에서는 LifeCycle에 많은 변화가 있었고 17에서는 더 많은 변화가 있을 것이라고 예고했다. 이번에 새로 등장한  라이프사이클 메소드를 이용해 에러를 관리하는 방법을 살펴보자. 기본적인 사용법 위의 코드를 살펴보면 에서 에러를 잡아…","fields":{"slug":"/react-16-error-handling/"},"frontmatter":{"date":"Oct 31, 2018","update":"Jan 01, 0001","title":"react 16, Error handling with HOC","tags":["react"]}}},{"node":{"excerpt":"Portals은 루트 리액트 컴포넌트가 아닌 외부의 DOM에 접근하여 변경할 수 있게 해준다. 쉽게 말하면 react는 기본적으로 아래와 같이 에 하나의 엘리먼트를 대상으로 마운트되어 그 곳에서만 변경이 가능하다. 그 외부의 엘리먼트를 대상으로 변경…","fields":{"slug":"/react-16-portals/"},"frontmatter":{"date":"Oct 31, 2018","update":"Jan 01, 0001","title":"react 16, Portals","tags":["react"]}}},{"node":{"excerpt":"React 16 이전에서는 return 시 하나의 컴포넌트 또는 null만 가능했다. 그래서 wrapper를 쓰는 방식으로 div로 감싸던가 아니면 span을 이용하던지, 그것도 아니면 array를 쓰는 등 여러 불편한 방법을 사용했었다. 하지만 1…","fields":{"slug":"/react-16-fragments/"},"frontmatter":{"date":"Oct 31, 2018","update":"Jan 01, 0001","title":"React 16, Fragments","tags":["react"]}}},{"node":{"excerpt":"주로 CRA(create-react-app)을 이용한 리액트 개발을 주로 해왔고 그로 인해 웹팩(Webpack) 번들러를 통해 간단한 설정 변경 등을 해왔는데 이번에 새로운 번들러인 파셀(Parcel)을 알게되었다. 공식 홈페이지의 헤드라인부터 불꽃…","fields":{"slug":"/parcel-start/"},"frontmatter":{"date":"Mar 23, 2018","update":"Jan 01, 0001","title":"웹팩 대신 파셀(Parcel) 사용해보기 with React, Babel, SASS","tags":["parcel","react","sass","babel"]}}},{"node":{"excerpt":"환경 Create-react-app (CRA) SCSS 로 적용 적용법 react 설정 eject & sass 패키지 설치  를 실행한다.\n해당 명령어는 에 위치하던 환경설정을 프로젝트 루트 경로로 이동시켜 상세한 환경설정이 가능하도록 한다.   두…","fields":{"slug":"/js-react-apply-sass/"},"frontmatter":{"date":"Nov 08, 2017","update":"Jan 01, 0001","title":"React 프로젝트에 SASS 적용하기","tags":["react","javascript","sass"]}}},{"node":{"excerpt":"출처 : https://velopert.com/1130 - Mount 컴포넌트가 실행 될 때, 'Mount 된다' 라고 표현. 컴포넌트가 시작되면 제일 초기의 작업은 context, defaultProps, state 저장 componentWillM…","fields":{"slug":"/js-react-lifecycle/"},"frontmatter":{"date":"Jun 20, 2017","update":"Jan 01, 0001","title":"리액트 생명주기 (React LifeCycle)","tags":["javascript","react"]}}},{"node":{"excerpt":"SPA(Single page application) 에서는 새로운 페이지 전체를 렌더링하지 않고, 부분적인 UI를 새로 렌더링한다.\n따라서 브라우저는 이 정보에 대한 이력을 남기지 않는다.\n결국 ''뒤로가기/앞으로가기''를 사용할 수 없다는 이야기이…","fields":{"slug":"/js-react-router-v4/"},"frontmatter":{"date":"Jun 06, 2017","update":"Jan 01, 0001","title":"리액트 라우터 V4 사용하기 (React-Router v4)","tags":["react"]}}}]},{"fieldValue":"react-native","totalCount":1,"edges":[{"node":{"excerpt":"Google Play Store Apple App Store WhatSubs라는 iOS, Android 플랫폼의 React Native 앱을 최근에 만들게 되었습니다.\n지금은 두 플랫폼에서 모두 심사가 끝나고 출시가 되었습니다.\n아무래도 개인적인 필…","fields":{"slug":"/whatsubs-dev-story/"},"frontmatter":{"date":"Dec 05, 2019","update":"Jan 01, 0001","title":"WhatSubs 앱 개발기 (React-Native, Expo)","tags":["react-native"]}}}]},{"fieldValue":"ruby","totalCount":1,"edges":[{"node":{"excerpt":"참고: 지금 계신 블로그는 기존 Jekyll을 이용한 블로그에서 현재(2018.09) Gatsby를 이용한 블로그로 개편되었습니다.   원래는 Hexo 블로그 프레임워크를 사용하여 블로그를 시작하려했었다. Hexo를 사용하려던 이유는 Node.js …","fields":{"slug":"/start-jekyll-blog/"},"frontmatter":{"date":"Jan 14, 2018","update":"Jan 01, 0001","title":"Jekyll 블로그 시작하기 (MacOS, GitHub Page)","tags":["jekyll","blog","ruby"]}}}]},{"fieldValue":"sass","totalCount":2,"edges":[{"node":{"excerpt":"주로 CRA(create-react-app)을 이용한 리액트 개발을 주로 해왔고 그로 인해 웹팩(Webpack) 번들러를 통해 간단한 설정 변경 등을 해왔는데 이번에 새로운 번들러인 파셀(Parcel)을 알게되었다. 공식 홈페이지의 헤드라인부터 불꽃…","fields":{"slug":"/parcel-start/"},"frontmatter":{"date":"Mar 23, 2018","update":"Jan 01, 0001","title":"웹팩 대신 파셀(Parcel) 사용해보기 with React, Babel, SASS","tags":["parcel","react","sass","babel"]}}},{"node":{"excerpt":"환경 Create-react-app (CRA) SCSS 로 적용 적용법 react 설정 eject & sass 패키지 설치  를 실행한다.\n해당 명령어는 에 위치하던 환경설정을 프로젝트 루트 경로로 이동시켜 상세한 환경설정이 가능하도록 한다.   두…","fields":{"slug":"/js-react-apply-sass/"},"frontmatter":{"date":"Nov 08, 2017","update":"Jan 01, 0001","title":"React 프로젝트에 SASS 적용하기","tags":["react","javascript","sass"]}}}]},{"fieldValue":"undefined","totalCount":9,"edges":[{"node":{"excerpt":"유튜브 영상에서 한글 댓글만을 볼 수 있는 크롬 확장 프로그램 \"한댓\" 쉽게 댓글 화면의 우측 상단에 위치한 버튼으로 한글 댓글만 보기를 활성화할 수 있습니다. 유튜브의 한국어 차별, 더이상 못 참겠어서 폭로합니다. by 영국남자 영상을 보고 간단하…","fields":{"slug":"/yt-ohc/"},"frontmatter":{"date":"Jun 26, 2020","update":"Jan 01, 0001","title":"한댓: 유튜브 한글 댓글만 보기 (크롬 확장 프로그램)","tags":["undefined"]}}},{"node":{"excerpt":"지금 이 글을 보고 있는 블로그는 Borderless 테마를 사용하고 있는 블로그입니다. Gatsby를 이용해 제작되었으며 Gatsby에 대한 간략한 설명은 이전 글(Gatsby로 블로그 만들기)에서 확인 할 수 있습니다. Borderless 블로그…","fields":{"slug":"/develop-blog-v3_3/"},"frontmatter":{"date":"Dec 30, 2019","update":"Jan 01, 0001","title":"Borderless 테마로 Gatsby 블로그 만들기","tags":["undefined"]}}},{"node":{"excerpt":"이 글은 개발해서 운영하고 있는 서비스에 대한 잡담과 같은 후기이다. 현재까지 개발해서 지속적으로 운영하고 있는 결과물은 5개 정도이다. Blog Netflix AutoSkip Tablo Tablo (version 2) WhatSubs Blog 최근…","fields":{"slug":"/dev-log-2019/"},"frontmatter":{"date":"Dec 29, 2019","update":"Jan 01, 0001","title":"현재까지 개발한 결과물에 대한 이야기 2019","tags":["undefined"]}}},{"node":{"excerpt":"App Store Connect에서 앱 정보를 입력하고 실제로 출시한다면 App Store에서 입력한 항목들은 어디에 어떻게 위치하게 될 지 정리해보았습니다. 아래는 App Store Connect에서 입력하고 App Store에 직접적으로 표시될 …","fields":{"slug":"/app-store-connect-form/"},"frontmatter":{"date":"Dec 06, 2019","update":"Jan 01, 0001","title":"App Store Connect에 입력한 내용이 App Store에 어떻게 보일까?","tags":["undefined"]}}},{"node":{"excerpt":"Tablo - Bookmark and manage tabs 다운로드 링크 : Chrome WebStore - Tablo 우선 Tablo 앱을 만들게 된 것은 나만의 링크들을 담아두는 즐겨찾기를 만들고자 시작했고, 그 방식은 현재 열려있는 탭들을 나만…","fields":{"slug":"/tablo-develop/"},"frontmatter":{"date":"Jan 08, 2019","update":"Jan 01, 0001","title":"크롬 확장프로그램 'Tablo' 소개 및 개발기","tags":["undefined"]}}},{"node":{"excerpt":"아직은 개발을 공부하는 입장으로 공부하는 프로젝트 위주이기에, 배포된 개발한 결과물이 많진 않지만 지금까지 개발한 결과물에 대한 이야기를 이야기 해보려 한다. 연말을 맞아 기록해두면 좋을 것 같아서 작성해본다. 현재 구글 애널리틱스에는 두가지가 등록…","fields":{"slug":"/dev-reports-2018/"},"frontmatter":{"date":"Dec 03, 2018","update":"Jan 01, 0001","title":"현재까지 개발한 결과물에 대한 이야기","tags":["undefined"]}}},{"node":{"excerpt":"colors 모듈은 우리가 흔히 사용하는 의 출력문에 색상을 입힐 수 있다. 설치 사용하기 기본적인 사용. 아래와 같은 사용도 가능하다. 아래와 같은 방식으로 커스텀 테마를 지정해 사용할 수도 있다.","fields":{"slug":"/colors-module/"},"frontmatter":{"date":"May 06, 2018","update":"Jan 01, 0001","title":"콘솔에 색상을 입혀주는 'Colors' 모듈 사용해보기","tags":["undefined"]}}},{"node":{"excerpt":"Symbolic Link? 개발을 하던 중 한 파일이 여러 곳에서 필요한 경우가 있다. 물론 모듈을 써서 사용하겠지만 개발 공부할 때는 종종 있는 일이다. 그래서 복사 붙여놓기 보다는 나은 방법이 심볼릭 링크인 것 같아 방법을 소개한다. 개발 외에서…","fields":{"slug":"/mac-symbolic-link/"},"frontmatter":{"date":"Feb 20, 2018","update":"Jan 01, 0001","title":"MacOS, 심볼릭 링크 사용하기","tags":["undefined"]}}},{"node":{"excerpt":"새로운 포스트로 업데이트 되었습니다. 아래 링크를 통해 확인할 수 있습니다.   mac 터미널 환경 구성하기 (zsh, oh my zsh, zplug, hyper) MacOS 재설치 후 기본적인 설정을 하면서 간단히 정리해본 Mac 터미널 세팅 과정…","fields":{"slug":"/mac-terminal/"},"frontmatter":{"date":"Jan 29, 2018","update":"Jan 01, 0001","title":"Mac Terminal 설정 (zsh, oh my zsh, plugin)","tags":["undefined"]}}}]},{"fieldValue":"vue","totalCount":1,"edges":[{"node":{"excerpt":"Vue.JS 설치 CDN으로 설치하기 간단히 index.html 내에 위 코드를 추가하는 것만으로 vue를 간단하게 사용할 수 있다. 다만 CDN을 기반으로 Vue를 개발하려면 .vue 확장자를 이용하는 개발은 할 수 없어 싱글 파일 컴포넌트 개발이…","fields":{"slug":"/vuejs-install/"},"frontmatter":{"date":"Feb 21, 2018","update":"Jan 01, 0001","title":"Vue.JS 및 Vue 개발 도구 설치하기","tags":["vue","javascript"]}}}]},{"fieldValue":"yarn","totalCount":1,"edges":[{"node":{"excerpt":"MacOS 재설치 후 기본적인 설정을 하면서 간단히 정리해본 Node.js, npm, yarn 설치 과정 Node, NPM 설치 Node를 설치하기에 가장 간단하고 좋은 방법이라 생각하는 HomeBrew를 통한 설치를 해보겠습니다. 좋은 방법이라는 …","fields":{"slug":"/install-node-yarn/"},"frontmatter":{"date":"Jan 29, 2018","update":"Jan 01, 0001","title":"간단하게 Node.js, npm, yarn 설치하기","tags":["node","npm","yarn"]}}}]}]}},"pageContext":{}},"staticQueryHashes":["2027115977","694178885"]}