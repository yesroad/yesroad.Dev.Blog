{"componentChunkName":"component---src-templates-post-tsx","path":"/git-specific-files-merge/","result":{"data":{"markdownRemark":{"html":"<p>git에서 특정한 파일만 merge 하고 싶을 때가 있다.</p>\n<p><code class=\"language-text\">B</code> 브랜치를 <code class=\"language-text\">A</code> 브랜치에 merge 하려하는데 특정 파일(<code class=\"language-text\">./a.js</code>)만 병합하고 싶을 상황일 때 쓸 수 있는 방법이다.</p>\n<h2 id=\"방법-1\" style=\"position:relative;\"><a href=\"#%EB%B0%A9%EB%B2%95-1\" aria-label=\"방법 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>방법 1</h2>\n<p>merge 키워드를 사용하지 않지만 아래 방법으로 특정 파일만 합치는 것이 가능하다.</p>\n<p><code class=\"language-text\">A</code> 브랜치로 체크아웃한 상태에서 아래 명령을 입력한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">$ <span class=\"token function\">git</span> checkout -p B a.js</code></pre></div>\n<p>위 명령으로 작업을 완료 할 수 있고 아래는 이에 대한 설명이다.</p>\n<p><code class=\"language-text\">checkout -p</code> 여기서 p 플래그는 <code class=\"language-text\">-p|--patch</code>으로 patch 옵션을 나타낸다.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">$ <span class=\"token function\">git</span> checkout -p B a.js</code></pre></div>\n<p>명령을 통해서 패치하겠다는 명령을 주면,<br>\n변경 내용 출력과 함께 하단에 지금 작업에 반영하겠냐는 질문이 뜨는데 y를 입력해주면 된다.<br>\n여러번 질문이 나올 수 있는데 a를 입력하면 모든 질문에 y를 입력하는 행동을 할 수 있다.</p>\n<p>아래는 그 예시이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">$ <span class=\"token function\">git</span> checkout -p B a.js\n\n<span class=\"token function\">diff</span> --git b/a.js a/a.js\nindex 5f133a1<span class=\"token punctuation\">..</span>31d30c1 <span class=\"token number\">100644</span>\n--- b/a.js\n+++ a/a.js\n@@ -2,6 +2,7 @@ const _ <span class=\"token operator\">=</span> require<span class=\"token punctuation\">(</span><span class=\"token string\">'lodash'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n const Promise <span class=\"token operator\">=</span> require<span class=\"token punctuation\">(</span><span class=\"token string\">'bluebird'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n const path <span class=\"token operator\">=</span> require<span class=\"token punctuation\">(</span><span class=\"token string\">'path'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n+const config <span class=\"token operator\">=</span> require<span class=\"token punctuation\">(</span><span class=\"token string\">'./config'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n exports.createPages <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> graphql, actions <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n   const <span class=\"token punctuation\">{</span> createPage <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> actions<span class=\"token punctuation\">;</span>\nApply this hunk to index and worktree <span class=\"token punctuation\">[</span>y,n,q,a,d,j,J,g,/,e,?<span class=\"token punctuation\">]</span>? y</code></pre></div>\n<p>참고로 여기서 <code class=\"language-text\">[y,n,q,a,d,j,J,g,/,e,?]</code>의 의미는 아래와 같다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">y - stage this hunk\nn - do not stage this hunk\nq - quit; do not stage this hunk nor any of the remaining ones\na - stage this hunk and all later hunks in the file\nd - do not stage this hunk nor any of the later hunks in the file\ng - select a hunk to go to\n/ - search for a hunk matching the given regex\nj - leave this hunk undecided, see next undecided hunk\nJ - leave this hunk undecided, see next hunk\nk - leave this hunk undecided, see previous undecided hunk\nK - leave this hunk undecided, see previous hunk\ns - split the current hunk into smaller hunks\ne - manually edit the current hunk\n? - print help</code></pre></div>\n<h2 id=\"방법-2\" style=\"position:relative;\"><a href=\"#%EB%B0%A9%EB%B2%95-2\" aria-label=\"방법 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>방법 2</h2>\n<p>두번째 방법은 merge 키워드를 사용하므로 위의 방법보다는 진정한 merge라고 할 수 있다.<br>\n다수의 파일을 합칠 때 유용하며,<br>\n모든 변경 사항을 가져오고, 특정 파일의 변경 사항을 제외시켜 특정 파일 외의 모든 변경사항을 합치고 싶을 때 사용한다.</p>\n<p>현재 작업중인 <code class=\"language-text\">A</code> 브랜치에서 <code class=\"language-text\">personalConfig.js</code> 파일과 <code class=\"language-text\">REAME.md</code> 파일만은 그대로 두고, 나머지 <code class=\"language-text\">B</code> 브랜치의 모든 변경 사항은 합치고 싶다면 <code class=\"language-text\">A</code> 브랜치로 체크아웃 후에 아래의 과정을 거치면 된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">$ <span class=\"token function\">git</span> merge --no-commit --no-ff B -X theirs\n\n$ <span class=\"token function\">git</span> reset HEAD personalConfig.js README.md\n\n$ <span class=\"token function\">git</span> clean -fd\n\n$ <span class=\"token function\">git</span> commit</code></pre></div>","excerpt":"git에서 특정한 파일만 merge 하고 싶을 때가 있다.  브랜치를  브랜치에 merge 하려하는데 특정 파일()만 병합하고 싶을 상황일 때 쓸 수 있는 방법이다. 방법 1 merge 키워드를 사용하지 않지만 아래 방법으로 특정 파일만 합치는 것이…","tableOfContents":"<ul>\n<li><a href=\"/git-specific-files-merge/#%EB%B0%A9%EB%B2%95-1\">방법 1</a></li>\n<li><a href=\"/git-specific-files-merge/#%EB%B0%A9%EB%B2%95-2\">방법 2</a></li>\n</ul>","fields":{"slug":"/git-specific-files-merge/"},"frontmatter":{"title":"git 특정한 파일 병합(merge) 하기","date":"Nov 06, 2018","tags":["git"],"keywords":["git merge","git specific merge","git specific file merge","특정 파일 merge"],"update":"Sep 23, 2020"}}},"pageContext":{"slug":"/git-specific-files-merge/","series":[],"lastmod":"2020-09-23"}},"staticQueryHashes":["2027115977","694178885"]}